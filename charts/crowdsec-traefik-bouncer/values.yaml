# Default values for crowdsec-traefik-bouncer.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

## @section Bouncer
bouncer:
  ## @param bouncer.crowdsec_bouncer_api_key [string] Bouncer API key (must be generated from CrowdSec agent)
  crowdsec_bouncer_api_key: ""
  ## @param bouncer.crowdsec_agent_host [string] CrowdSec LAPI host (e.g. crowdsec-service.crowdsec.svc.cluster.local:8080)
  crowdsec_agent_host: ""
  ## @param bouncer.crowdsec_bouncer_gin_mode [string] Gin mode for the bouncer app (debug, release, test)
  crowdsec_bouncer_gin_mode: "debug"
  ## @param bouncer.env [array] Additional environment variables for the bouncer container
  env: []

## @param replicaCount Number of replicas for the bouncer Deployment
replicaCount: 1

## @section Image
image:
  ## @param image.repository [string] Container image repository
  repository: fbonalair/traefik-crowdsec-bouncer
  ## @param image.pullPolicy [string] Image pull policy (Always, IfNotPresent, Never)
  pullPolicy: IfNotPresent
  ## @param image.tag [string] Image tag (defaults to chart appVersion if empty)
  tag: ""

## @param imagePullSecrets [array] Image pull secrets (list of objects with `name` field)
imagePullSecrets: []

## @param podAnnotations [object] Annotations applied to bouncer pods
podAnnotations: {}

## @param podSecurityContext [object] Pod-level security context
podSecurityContext: {}
  # fsGroup: 2000

## @param securityContext [object] Container-level security context
securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

## @section Service
service:
  ## @param service.type [string] Kubernetes Service type
  type: ClusterIP
  ## @param service.port Service port for the bouncer
  port: 80

## @section Resources
## @param resources [object] Resource requests and limits for bouncer pods
resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

## @param nodeSelector [object] Node selector rules for scheduling pods
nodeSelector: {}

## @param tolerations [array] Tolerations for scheduling pods
tolerations: []

## @param affinity [object] Affinity rules for scheduling pods
affinity: {}

## @param priorityClassName [string] PriorityClass name for pods
priorityClassName: ""
