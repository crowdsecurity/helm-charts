{
    "title": "Chart Values",
    "type": "object",
    "properties": {
        "container_runtime": {
            "type": "string",
            "description": "[string] for raw logs format: json or cri (docker|containerd)",
            "default": "docker"
        },
        "image": {
            "type": "object",
            "properties": {
                "repository": {
                    "type": "string",
                    "description": "[string] docker image repository name",
                    "default": "crowdsecurity/crowdsec"
                },
                "pullPolicy": {
                    "type": "string",
                    "description": "[string] Image pull policy (Always, IfNotPresent, Never)",
                    "default": "IfNotPresent"
                },
                "pullSecrets": {
                    "type": "array",
                    "description": "Image pull secrets (array of objects with a 'name' field)",
                    "default": "[]",
                    "items": {
                        "type": "string"
                    }
                },
                "tag": {
                    "type": "string",
                    "description": "docker image tag (empty defaults to chart AppVersion)",
                    "default": "\"\""
                }
            }
        },
        "config": {
            "type": "object",
            "properties": {
                "parsers": {
                    "type": "object",
                    "properties": {
                        "s00-raw": {
                            "type": "object",
                            "description": "First step custom parsers definitions, usually used to label logs",
                            "default": {}
                        },
                        "s01-parse": {
                            "type": "object",
                            "description": "Second step custom parsers definitions, usually to normalize logs into events",
                            "default": {}
                        },
                        "s02-enrich": {
                            "type": "object",
                            "description": "Third step custom parsers definitions, usually to enrich events",
                            "default": {}
                        }
                    }
                },
                "scenarios": {
                    "type": "object",
                    "description": "Custom raw scenarios definition see https://docs.crowdsec.net/docs/next/log_processor/scenarios/intro",
                    "default": {}
                },
                "postoverflows": {
                    "type": "object",
                    "properties": {
                        "s00-enrich": {
                            "type": "object",
                            "description": "First step custom postoverflows definitions, usually used to enrich overflow events",
                            "default": {}
                        },
                        "s01-whitelist": {
                            "type": "object",
                            "description": "Second step custom postoverflows definitions, usually used to whitelist events",
                            "default": {}
                        }
                    }
                },
                "notifications": {
                    "type": "object",
                    "description": "notification on alert configuration",
                    "default": {}
                }
            }
        },
        "tls": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Is tls enabled ?",
                    "default": false
                },
                "caBundle": {
                    "type": "boolean",
                    "description": "pem format CA collection",
                    "default": true
                },
                "insecureSkipVerify": {
                    "type": "boolean",
                    "description": "",
                    "default": false
                },
                "certManager": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "[object] Use of a cluster cert manager",
                            "default": "true"
                        },
                        "duration": {
                            "type": "string",
                            "description": "validity duration of certificate (golang duration string)",
                            "default": "\"\""
                        },
                        "renewBefore": {
                            "type": "string",
                            "description": "duration before a certificate’s expiry when cert-manager should start renewing it.",
                            "default": "\"\""
                        }
                    }
                },
                "bouncer": {
                    "type": "object",
                    "properties": {
                        "secret": {
                            "type": "string",
                            "description": "Name of the Kubernetes Secret containing TLS materials for the bouncer",
                            "default": "\"\""
                        },
                        "reflector": {
                            "type": "object",
                            "properties": {
                                "namespaces": {
                                    "type": "array",
                                    "description": "List of namespaces from which the bouncer will watch and sync Secrets/ConfigMaps.",
                                    "default": "[]",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "agent": {
                    "type": "object",
                    "properties": {
                        "tlsClientAuth": {
                            "type": "boolean",
                            "description": "[object] Enables mutual TLS authentication for the agent when connecting to LAPI.",
                            "default": "true"
                        },
                        "secret": {
                            "type": "string",
                            "description": "Name of the Secret holding the agent’s TLS certificate and key.",
                            "default": "\"\""
                        },
                        "reflector": {
                            "type": "object",
                            "properties": {
                                "namespaces": {
                                    "type": "array",
                                    "description": "Namespaces where the agent’s TLS Secret can be reflected/synced.",
                                    "default": "[]",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "appsec": {
                    "type": "object",
                    "properties": {
                        "tlsClientAuth": {
                            "type": "boolean",
                            "description": "[object] Enables mutual TLS authentication for the agent when connecting to LAPI.",
                            "default": "true"
                        },
                        "secret": {
                            "type": "string",
                            "description": "Name of the Secret holding the agent’s TLS certificate and key.",
                            "default": "\"\""
                        },
                        "reflector": {
                            "type": "object",
                            "properties": {
                                "namespaces": {
                                    "type": "array",
                                    "description": "Namespaces where the agent’s TLS Secret can be reflected/synced.",
                                    "default": "[]",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "lapi": {
                    "type": "object",
                    "properties": {
                        "secret": {
                            "type": "string",
                            "description": "Name of the Secret holding the lapidary's’s TLS certificate and key.",
                            "default": "\"\""
                        },
                        "reflector": {
                            "type": "object",
                            "properties": {
                                "namespaces": {
                                    "type": "array",
                                    "description": "Namespaces where the LAPI TLS Secret can be reflected/synced.",
                                    "default": "[]",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "secrets": {
            "type": "object",
            "properties": {
                "username": {
                    "type": "string",
                    "description": "Agent username (default is generated randomly)",
                    "default": "\"\""
                },
                "password": {
                    "type": "string",
                    "description": "Agent password (default is generated randomly)",
                    "default": "\"\""
                },
                "externalSecret": {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "Name of the external secret to use (overrides lapi.secrets.csLapiSecret and lapi.secrets.registrationToken)",
                            "default": "\"\""
                        },
                        "csLapiSecretKey": {
                            "type": "string",
                            "description": "[default: csLapiSecret] The key in the external secret that holds the csLapiSecret",
                            "default": "\"\""
                        },
                        "registrationTokenKey": {
                            "type": "string",
                            "description": "[default:registrationToken] The key in the external secret that holds the registrationToken",
                            "default": "\"\""
                        }
                    }
                }
            }
        },
        "lapi": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable LAPI deployment (enabled by default)",
                    "default": true
                },
                "replicas": {
                    "type": "number",
                    "description": "Number of replicas for the Local API",
                    "default": 1
                },
                "env": {
                    "type": "array",
                    "description": "Extra environment variables passed to the crowdsecurity/crowdsec container",
                    "default": "[]",
                    "items": {
                        "type": "string"
                    }
                },
                "envFrom": {
                    "type": "array",
                    "description": "Environment variables loaded from Kubernetes Secrets or ConfigMaps",
                    "default": "[]",
                    "items": {
                        "type": "string"
                    }
                },
                "ingress": {
                    "type": "object",
                    "properties": {
                        "ingressClassName": {
                            "type": "string",
                            "description": "IngressClass name for the LAPI ingress",
                            "default": "\"\""
                        },
                        "host": {
                            "type": "string",
                            "description": "Hostname for the LAPI ingress",
                            "default": "\"\""
                        }
                    }
                },
                "priorityClassName": {
                    "type": "string",
                    "description": "Pod priority class name",
                    "default": "\"\""
                },
                "extraInitContainers": {
                    "type": "array",
                    "description": "Additional init containers for LAPI pods",
                    "default": "[]",
                    "items": {
                        "type": "string"
                    }
                },
                "extraVolumes": {
                    "type": "array",
                    "description": "Additional volumes for LAPI pods",
                    "default": "[]",
                    "items": {
                        "type": "string"
                    }
                },
                "extraVolumeMounts": {
                    "type": "array",
                    "description": "Additional volumeMounts for LAPI pods",
                    "default": "[]",
                    "items": {
                        "type": "string"
                    }
                },
                "persistentVolume": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "description": "Enable persistent volume for the data folder (stores bouncer API keys)",
                                    "default": true
                                },
                                "accessModes": {
                                    "type": "array",
                                    "description": "Access modes for the data PVC",
                                    "default": "[]",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "storageClassName": {
                                    "type": "string",
                                    "description": "StorageClass name for the data PVC",
                                    "default": "\"\""
                                },
                                "existingClaim": {
                                    "type": "string",
                                    "description": "Existing PersistentVolumeClaim to use for the data PVC",
                                    "default": "\"\""
                                },
                                "size": {
                                    "type": "string",
                                    "description": "Requested size for the data PVC",
                                    "default": "\"\""
                                }
                            }
                        },
                        "config": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "description": "Enable persistent volume for the config folder (stores API credentials)",
                                    "default": true
                                },
                                "accessModes": {
                                    "type": "array",
                                    "description": "Access modes for the config PVC",
                                    "default": "[]",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "storageClassName": {
                                    "type": "string",
                                    "description": "StorageClass name for the config PVC",
                                    "default": "\"\""
                                },
                                "existingClaim": {
                                    "type": "string",
                                    "description": "Existing PersistentVolumeClaim to use for the config PVC",
                                    "default": "\"\""
                                },
                                "size": {
                                    "type": "string",
                                    "description": "Requested size for the config PVC",
                                    "default": "\"\""
                                }
                            }
                        }
                    }
                },
                "service": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Kubernetes service type for LAPI",
                            "default": "\"\""
                        },
                        "externalIPs": {
                            "type": "array",
                            "description": "List of external IPs for the LAPI service",
                            "default": "[]",
                            "items": {
                                "type": "string"
                            }
                        },
                        "loadBalancerIP": {
                            "type": "string",
                            "description": "Specific loadBalancer IP for the LAPI service",
                            "default": "\"\""
                        },
                        "loadBalancerClass": {
                            "type": "string",
                            "description": "LoadBalancer class for the LAPI service",
                            "default": "\"\""
                        },
                        "externalTrafficPolicy": {
                            "type": "string",
                            "description": "External traffic policy for the LAPI service",
                            "default": "\"\""
                        }
                    }
                },
                "tolerations": {
                    "type": "array",
                    "description": "Tolerations for scheduling LAPI pods",
                    "default": "[]",
                    "items": {
                        "type": "string"
                    }
                },
                "topologySpreadConstraints": {
                    "type": "array",
                    "description": "Topology spread constraints for LAPI pods",
                    "default": "[]",
                    "items": {
                        "type": "string"
                    }
                },
                "metrics": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable service monitoring for Prometheus (exposes port 6060)",
                            "default": true
                        },
                        "serviceMonitor": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "description": "[object] Create a ServiceMonitor resource for Prometheus",
                                    "default": "true"
                                }
                            }
                        },
                        "podMonitor": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "description": "Enables podMonitor",
                                    "default": false
                                },
                                "additionalLabels": {
                                    "type": "object",
                                    "description": "additional labels for podMoNITOR [WIP]",
                                    "default": {}
                                }
                            }
                        }
                    }
                },
                "strategy": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Deployment strategy for the LAPI deployment",
                            "default": "\"\""
                        }
                    }
                },
                "secrets": {
                    "type": "object",
                    "properties": {
                        "csLapiSecret": {
                            "type": "string",
                            "description": "Shared LAPI secret (randomly generated if not specified, must be >64 chars)",
                            "default": "\"\""
                        },
                        "registrationToken": {
                            "type": "string",
                            "description": "Registration token for AppSec (randomly generated if not specified, must be >48 chars)",
                            "default": "\"\""
                        }
                    }
                },
                "storeCAPICredentialsInSecret": {
                    "type": "boolean",
                    "description": "[object] Store Central API credentials in a Secret (required if LAPI replicas > 1)",
                    "default": "false"
                }
            }
        },
        "agent": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "[object] Enable CrowdSec agent (enabled by default)",
                    "default": "true"
                },
                "isDeployment": {
                    "type": "boolean",
                    "description": "[object] Deploy agent as a Deployment instead of a DaemonSet",
                    "default": "false"
                },
                "lapiURL": {
                    "type": "string",
                    "description": "URL of the LAPI for the agent to connect to (defaults to internal service URL)",
                    "default": "\"\""
                },
                "lapiHost": {
                    "type": "string",
                    "description": "Host of the LAPI for the agent to connect to",
                    "default": "\"\""
                },
                "lapiPort": {
                    "type": "number",
                    "description": "Port of the LAPI for the agent to connect to",
                    "default": 8080
                },
                "replicas": {
                    "type": "number",
                    "description": "Number of replicas when deploying as a Deployment",
                    "default": 1
                },
                "ports": {
                    "type": "array",
                    "description": "Custom container ports to expose (default: metrics port 6060 if enabled)",
                    "default": "[]",
                    "items": {
                        "type": "string"
                    }
                },
                "additionalAcquisition": {
                    "type": "array",
                    "description": "Extra log acquisition sources (see https://docs.crowdsec.net/docs/next/data_sources/intro)",
                    "default": "[]",
                    "items": {
                        "type": "string"
                    }
                },
                "acquisition": {
                    "type": "array",
                    "description": "Pod log acquisition definitions (namespace, podName, program, etc.)",
                    "default": "[]",
                    "items": {
                        "type": "string"
                    }
                },
                "priorityClassName": {
                    "type": "string",
                    "description": "Priority class name for agent pods",
                    "default": "\"\""
                },
                "extraInitContainers": {
                    "type": "array",
                    "description": "Extra init containers for agent pods",
                    "default": "[]",
                    "items": {
                        "type": "string"
                    }
                },
                "extraVolumes": {
                    "type": "array",
                    "description": "Extra volumes for agent pods",
                    "default": "[]",
                    "items": {
                        "type": "string"
                    }
                },
                "extraVolumeMounts": {
                    "type": "array",
                    "description": "Extra volume mounts for agent pods",
                    "default": "[]",
                    "items": {
                        "type": "string"
                    }
                },
                "persistentVolume": {
                    "type": "object",
                    "properties": {
                        "config": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "description": "[object] Enable persistent volume for agent config",
                                    "default": "false"
                                },
                                "accessModes": {
                                    "type": "array",
                                    "description": "Access modes for the config PVC",
                                    "default": "[]",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "storageClassName": {
                                    "type": "string",
                                    "description": "StorageClass name for the config PVC",
                                    "default": "\"\""
                                },
                                "existingClaim": {
                                    "type": "string",
                                    "description": "Existing PVC name to use for config",
                                    "default": "\"\""
                                },
                                "size": {
                                    "type": "string",
                                    "description": "Requested size for the config PVC",
                                    "default": "\"\""
                                }
                            }
                        }
                    }
                },
                "hostVarLog": {
                    "type": "boolean",
                    "description": "[object] Mount hostPath `/var/log` into the agent pod",
                    "default": "true"
                },
                "env": {
                    "type": "array",
                    "description": "Environment variables passed to the crowdsecurity/crowdsec container",
                    "default": "[]",
                    "items": {
                        "type": "string"
                    }
                },
                "tolerations": {
                    "type": "array",
                    "description": "Tolerations for scheduling agent pods",
                    "default": "[]",
                    "items": {
                        "type": "string"
                    }
                },
                "metrics": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable service monitoring for Prometheus (exposes port 6060)",
                            "default": true
                        },
                        "serviceMonitor": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "description": "Create a ServiceMonitor resource for Prometheus",
                                    "default": false
                                }
                            }
                        },
                        "podMonitor": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "description": "Create a PodMonitor resource for Prometheus",
                                    "default": false
                                }
                            }
                        }
                    }
                },
                "service": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Kubernetes Service type for agent",
                            "default": "\"\""
                        },
                        "externalIPs": {
                            "type": "array",
                            "description": "External IPs assigned to the agent Service",
                            "default": "[]",
                            "items": {
                                "type": "string"
                            }
                        },
                        "loadBalancerIP": {
                            "type": "string",
                            "description": "Fixed LoadBalancer IP for the agent Service",
                            "default": "\"\""
                        },
                        "loadBalancerClass": {
                            "type": "string",
                            "description": "LoadBalancer class for the agent Service",
                            "default": "\"\""
                        },
                        "externalTrafficPolicy": {
                            "type": "string",
                            "description": "External traffic policy for the agent Service",
                            "default": "\"\""
                        },
                        "ports": {
                            "type": "array",
                            "description": "Custom service ports (default: metrics port 6060 if enabled)",
                            "default": "[]",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                },
                "wait_for_lapi": {
                    "type": "object",
                    "properties": {
                        "image": {
                            "type": "object",
                            "properties": {
                                "repository": {
                                    "type": "string",
                                    "description": "Repository for the wait-for-lapi init container image",
                                    "default": "\"\""
                                },
                                "pullPolicy": {
                                    "type": "string",
                                    "description": "Image pull policy for the wait-for-lapi init container",
                                    "default": "\"\""
                                },
                                "tag": {
                                    "type": "string",
                                    "description": "Image tag for the wait-for-lapi init container",
                                    "default": "\"\""
                                }
                            }
                        }
                    }
                }
            }
        },
        "appsec": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "[object] Enable AppSec component (disabled by default)",
                    "default": "false"
                },
                "lapiURL": {
                    "type": "string",
                    "description": "URL the AppSec component uses to reach LAPI (defaults to internal service URL)",
                    "default": "\"\""
                },
                "lapiHost": {
                    "type": "string",
                    "description": "Hostname the AppSec component uses to reach LAPI",
                    "default": "\"\""
                },
                "lapiPort": {
                    "type": "number",
                    "description": "Port the AppSec component uses to reach LAPI",
                    "default": 8080
                },
                "replicas": {
                    "type": "number",
                    "description": "Number of replicas for the AppSec Deployment",
                    "default": 1
                },
                "acquisitions": {
                    "type": "array",
                    "description": "AppSec acquisitions (datasource listeners), e.g. appsec listener on 7422",
                    "default": "[]",
                    "items": {
                        "type": "string"
                    }
                },
                "priorityClassName": {
                    "type": "string",
                    "description": "Priority class name for AppSec pods",
                    "default": "\"\""
                },
                "extraInitContainers": {
                    "type": "array",
                    "description": "Extra init containers for AppSec pods",
                    "default": "[]",
                    "items": {
                        "type": "string"
                    }
                },
                "extraVolumes": {
                    "type": "array",
                    "description": "Extra volumes for AppSec pods",
                    "default": "[]",
                    "items": {
                        "type": "string"
                    }
                },
                "extraVolumeMounts": {
                    "type": "array",
                    "description": "Extra volume mounts for AppSec pods",
                    "default": "[]",
                    "items": {
                        "type": "string"
                    }
                },
                "env": {
                    "type": "array",
                    "description": "Environment variables for the AppSec container (collections/configs/rules toggles, etc.)",
                    "default": "[]",
                    "items": {
                        "type": "string"
                    }
                },
                "tolerations": {
                    "type": "array",
                    "description": "Tolerations for scheduling AppSec pods",
                    "default": "[]",
                    "items": {
                        "type": "string"
                    }
                },
                "metrics": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable service monitoring (exposes metrics on 6060; AppSec listener typically 7422)",
                            "default": true
                        },
                        "serviceMonitor": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "description": "Create a ServiceMonitor for Prometheus scraping",
                                    "default": false
                                }
                            }
                        },
                        "podMonitor": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "description": "Create a PodMonitor for Prometheus scraping",
                                    "default": false
                                }
                            }
                        }
                    }
                },
                "service": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Kubernetes Service type for AppSec",
                            "default": "\"\""
                        },
                        "externalIPs": {
                            "type": "array",
                            "description": "External IPs for the AppSec Service",
                            "default": "[]",
                            "items": {
                                "type": "string"
                            }
                        },
                        "loadBalancerIP": {
                            "type": "string",
                            "description": "Fixed LoadBalancer IP for the AppSec Service",
                            "default": "\"\""
                        },
                        "loadBalancerClass": {
                            "type": "string",
                            "description": "LoadBalancer class for the AppSec Service",
                            "default": "\"\""
                        },
                        "externalTrafficPolicy": {
                            "type": "string",
                            "description": "External traffic policy for the AppSec Service",
                            "default": "\"\""
                        }
                    }
                },
                "wait_for_lapi": {
                    "type": "object",
                    "properties": {
                        "image": {
                            "type": "object",
                            "properties": {
                                "repository": {
                                    "type": "string",
                                    "description": "Repository for the wait-for-lapi init con",
                                    "default": "\"\""
                                },
                                "pullPolicy": {
                                    "type": "string",
                                    "description": "Image pull policy for the wait-for-lapi init container",
                                    "default": "\"\""
                                },
                                "tag": {
                                    "type": "string",
                                    "description": "Image tag for the wait-for-lapi init container",
                                    "default": "1.28"
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}