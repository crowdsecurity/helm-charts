apiVersion: v2
name: crowdsec
description: |
  Crowdsec helm chart is an open-source, lightweight agent to detect and respond to bad behaviours.

  ## Get Repo Info

  ```
  helm repo add crowdsec https://crowdsecurity.github.io/helm-charts
  helm repo update
  ```

  ## Installing the Chart

  Before installing the chart, you need to understand some [concepts](https://docs.crowdsec.net/docs/concepts) of Crowdsec.
  So you can configure well the chart and being able to parse logs and detect attacks inside your Kubernetes cluster.

  Here is a [blog post](https://crowdsec.net/blog/kubernetes-crowdsec-integration/) about crowdsec in kubernetes.

  ```
  # Create namespace for crowdsec
  kubectl create ns crowdsec
  # Install helm chart with proper values.yaml config
  helm install crowdsec crowdsec/crowdsec -f crowdsec-values.yaml -n crowdsec
  ```

  ## Uninstalling the Chart

  ```
  helm delete crowdsec -n crowdsec
  ```

  ## Setup for High Availability

  Below a basic configuration for High availability

  ```
  # your-values.yaml

  # Configure external DB (https://docs.crowdsec.net/docs/configuration/crowdsec_configuration/#configuration-example)
  config:
    config.yaml.local: |
      db_config:
        type:     postgresql
        user:     crowdsec
        password: ${DB_PASSWORD}
        db_name:  crowdsec
        host:     192.168.0.2
        port:     5432
        sslmode:  require

  lapi:
    # 2 or more replicas for HA
    replicas: 2
    # You can specify your own CS_LAPI_SECRET, or let the chart generate one. Length must be >= 64
    secrets:
      csLapiSecret: <anyRandomSecret>
    # Specify your external DB password here
    extraSecrets:
      dbPassword: <externalDbPassword>
    persistentVolume:
      # When replicas for LAPI is greater than 1, two options, persistent volumes must be disabled, or in ReadWriteMany mode
      config:
        enabled: false
      # data volume is not required, since SQLite isn't used
      data:
        enabled: false
    # DB Password passed through environment variable
    env:
      - name: DB_PASSWORD
        valueFrom:
          secretKeyRef:
            name: crowdsec-lapi-secrets
            key: dbPassword
  ```

# A chart can be either an 'application' or a 'library' chart.
#
# Application charts are a collection of templates that can be packaged into versioned archives
# to be deployed.
#
# Library charts provide useful utilities or functions for the chart developer. They're included as
# a dependency of application charts to inject those utilities and functions into the rendering
# pipeline. Library charts do not define any templates and therefore cannot be deployed.
type: application

# This is the chart version. This version number should be incremented each time you make changes
# to the chart and its templates, including the app version.
# Versions are expected to follow Semantic Versioning (https://semver.org/)
version: 0.11.2

# This is the version number of the application being deployed. This version number should be
# incremented each time you make changes to the application. Versions are not expected to
# follow Semantic Versioning. They should reflect the version the application is using.
appVersion: v1.6.2
